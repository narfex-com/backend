{
    "openapi": "3.0.0",
    "info": {
        "title": "narfex API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|f9511jkjasdghylnb347ko"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "description": "Register new user",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "Smith"
                                    },
                                    "nickname": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nickname"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull register",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|f9511jkjasdghylnb347ko"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/balances": {
            "get": {
                "tags": [
                    "balance"
                ],
                "summary": "Get balances",
                "operationId": "balancesGet",
                "responses": {
                    "200": {
                        "description": "Returns user's balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Balance"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/balances/{currency}": {
            "post": {
                "tags": [
                    "balance"
                ],
                "summary": "Create a balance",
                "operationId": "balanceCreate",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "path",
                        "description": "Currency's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the created balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Balance"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The currency is not implemented yet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "description": "Translated error to display",
                                                    "type": "string",
                                                    "example": "The currency is not implemented yet"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Get currencies",
                "operationId": "currenciesGet",
                "responses": {
                    "200": {
                        "description": "Returns available currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Currency"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get profile",
                "operationId": "profileGet",
                "responses": {
                    "200": {
                        "description": "Successfull login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Balance": {
                "title": "Balance",
                "description": "Balance model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int",
                        "example": 1
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "balance's amount",
                        "type": "number",
                        "format": "float",
                        "example": 0.0023
                    },
                    "address": {
                        "title": "address",
                        "description": "balance's address in blockchain",
                        "type": "string",
                        "format": "string",
                        "example": "0x1ka36qerzv8nz72dfg34ak462",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Balance"
                }
            },
            "Currency": {
                "title": "Currency",
                "description": "Currency model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "currency's id",
                        "type": "integer",
                        "format": "int",
                        "example": 1
                    },
                    "code": {
                        "title": "code",
                        "description": "currency's code",
                        "type": "string",
                        "format": "string",
                        "example": "btc"
                    },
                    "name": {
                        "title": "name",
                        "description": "currency's name",
                        "type": "string",
                        "format": "string",
                        "example": "Bitcoin"
                    },
                    "is_fiat": {
                        "title": "is_fiat",
                        "description": "is fiat currency (false is crypto)",
                        "type": "boolean",
                        "format": "bool",
                        "example": false
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Currency"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "nickname": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "johndoe23"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "email@mail.com"
                    },
                    "balances": {
                        "title": "Balances",
                        "description": "User's balances",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Balance"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "responses": {
            "401": {
                "description": "Wrong credentials"
            },
            "400": {
                "description": "User with nickname or email already exists"
            },
            "419": {
                "description": "Some of request's data is wrong"
            }
        }
    },
    "security": [
        []
    ]
}